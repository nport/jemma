<?xml version="1.0" encoding="UTF-8"?>
<project name="jemma.osgi.ah.zigbee" default="build.jars" basedir=".">

	<property name="p2.build.repo" value="file:${buildDirectory}/buildRepo"/>
	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>
	<property name="bundleId" value="jemma.osgi.ah.zigbee"/>
	<property name="bundleVersion" value="2.1.27"/>
	<property name="p2.publishonerror" value="false"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="false"/>
	<property name="logExtension" value=".log"/>
	<property name="compilerArg" value=""/>
	<property name="compilation.prereq.log" value="${buildDirectory}/prereqErrors.log"/>
	<property name="javacSource" value="1.3"/>
	<property name="javacTarget" value="1.2"/>
	<condition property="dir_bootclasspath" value="${java.home}/../Classes">
		<and>
			<os family="mac"/>
			<available file="${java.home}/../Classes" type="dir"/>
		</and>
	</condition>
	<property name="dir_bootclasspath" value="${java.home}/lib"/>
	<path id="path_bootclasspath">
		<fileset dir="${dir_bootclasspath}">
			<include name="*.jar"/>
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath"/>
	<condition property="bundleBootClasspath" value="${J2SE-1.5}"	>
		<isset property="J2SE-1.5"/>
	</condition>
	<condition property="bundleJavacSource" value="1.5"	>
		<isset property="J2SE-1.5"/>
	</condition>
	<condition property="bundleJavacTarget" value="1.5"	>
		<isset property="J2SE-1.5"/>
	</condition>
	<property name="bundleJavacSource" value="${javacSource}"/>
	<property name="bundleJavacTarget" value="${javacTarget}"/>
	<property name="bundleBootClasspath" value="${bootclasspath}"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins"		>
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/jemma.osgi.ah.zigbee_2.1.27"		>
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
		<condition property="p2.publish.parts" value="true"		>
			<istrue value="${p2.gathering}"/>
		</condition>
		<property name="compilation.problem.marker" value="${build.result.folder}/compilation.problem"/>
		<condition property="compilation.problem.marker.exists" value="true"		>
			<and>
			<available file="${compilation.problem.marker}"/>
			<isfalse value="${p2.publishonerror}"/>
			</and>
		</condition>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: jemma.osgi.ah.zigbee for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<jar destfile="${plugin.destination}/jemma.osgi.ah.zigbee_2.1.27.jar" basedir="${temp.folder}/jemma.osgi.ah.zigbee_2.1.27" filesetmanifest="merge"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="@dot.nestedJars">
	</target>
	<target name="@dot" depends="init,@dot.nestedJars" unless="@dot" description="Create jar: jemma.osgi.ah.zigbee @dot.">
		<delete dir="${build.result.folder}/@dot"/>
		<mkdir dir="${build.result.folder}/@dot"/>
		<path id="@dot.classpath">
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/org.eclipse.equinox.util-1.0.100.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/org.eclipse.osgi-3.10.0.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/org.eclipse.osgi.services-3.4.0.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/javax.servlet-3.0.0.v201112011016.jar"/>
			<pathelement path="../../newjemma/jemma.osgi.ah.hac.lib/target/classes"/>
			<pathelement path="../../newjemma/jemma.osgi.ah.hac.lib/@dot"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/pax-logging-api-1.7.2.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/jemma.osgi.javagal-2.0.6.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/commons-lang3-3.3.2.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/javax.xml-1.3.4.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/jssc-2.8.0.jar"/>
			<pathelement path="../../newjemma/Distribution/target/jemma.Distribution-0.2-bin/modules/dependencies/org.rxtx-1.0.0.jar"/>
		</path>
		<!-- compile the source code -->
		<javac destdir="${build.result.folder}/@dot" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bundleBootClasspath}" source="${bundleJavacSource}" target="${bundleJavacTarget}"		>
			<compilerarg line="${compilerArg}" compiler="${build.compiler}"/>
			<classpath refid="@dot.classpath" />
			<src path="src/main/java/"			/>
			<src path="/"			/>
			<src path="src/test/java/"			/>
			<compilerarg value="@${basedir}/javaCompiler...args" compiler="org.eclipse.jdt.core.JDTCompilerAdapter"			/>
			<compilerarg line="-log &apos;${build.result.folder}/@dot${logExtension}&apos;" compiler="org.eclipse.jdt.core.JDTCompilerAdapter"			/>
		</javac>
		<antcall target="checkCompilationResults"/>
		<!-- Copy necessary resources -->
		<copy todir="${build.result.folder}/@dot" failonerror="true" overwrite="false">
			<fileset dir="src/main/java/">
				<exclude name="**/*.java"/>
				<exclude name="**/package.htm*"/>
			</fileset>
			<fileset dir="/">
				<exclude name="**/*.java"/>
				<exclude name="**/package.htm*"/>
			</fileset>
			<fileset dir="src/test/java/">
				<exclude name="**/*.java"/>
				<exclude name="**/package.htm*"/>
			</fileset>
		</copy>
	</target>

	<target name="src.zip" depends="init" unless="src.zip">
		<mkdir dir="${build.result.folder}"/>
		<antcall target="zip.src.zip"/>
	</target>
	<target name="zip.src.zip">
		<zip destfile="${build.result.folder}/src.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/main/java/">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="/">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="src/test/java/">
				<include name="**/*.java"/>
			</fileset>
		</zip>
	</target>
	<target name="copy.src.zip">
		<copy todir="${source.destination.folder}/" failonerror="true" overwrite="true">
			<fileset dir="src/main/java/">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="/">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="src/test/java/">
				<include name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="build.jars" depends="init" description="Compile classes and build nested jars for the plug-in: jemma.osgi.ah.zigbee.">
		<delete file="${compilation.problem.marker}" quiet="true"/>
		<available property="@dot" file="${build.result.folder}/@dot"/>
		<antcall target="@dot"/>
	</target>

	<target name="checkCompilationResults" if="compilation.error.occured">
		<echo file="${compilation.problem.marker}" message="jemma.osgi.ah.zigbee_2.1.27${line.separator}compilation.error.occured=${compilation.error.occured}"/>
		<eclipse.logCompileError bundle="jemma.osgi.ah.zigbee_2.1.27" log="${compilation.prereq.log}">
			<include name="C:/Users/Pocos/Documents/newjemma/jemma.osgi.ah.hac.lib/compilation.problem"/>
			<include name="${pluginTemp}/jemma.osgi.ah.hac.lib_3.1.4/compilation.problem"/>
		</eclipse.logCompileError>
	</target>

	<target name="build.sources" depends="init">
		<available property="src.zip" file="${build.result.folder}/src.zip"/>
		<antcall target="src.zip"/>
	</target>

	<target name="publish.bin.parts" depends="init" if="p2.publish.parts" unless="compilation.problem.marker.exists">
		<mkdir dir="${build.result.folder}/jemma.osgi.ah.zigbee_2.1.27"/>
		<copy todir="${build.result.folder}" failonerror="true" overwrite="true">
			<fileset dir="${basedir}">
				<include name="META-INF/MANIFEST.MF"/>
				<include name="plugin.xml"/>
				<include name="fragment.xml"/>
			</fileset>
		</copy>
		<antcall target="apitools.generation">
			<param name="target.folder" value="${build.result.folder}"/>
			<param name="projectLocation" value="${basedir}"/>
			<param name="binary.folders" value="${build.result.folder}/@dot"/>
			<param name="projectName" value="${bundleId}_${bundleVersion}"/>
		</antcall>
		<eclipse.gatherBundle 
		   metadataRepository="${p2.build.repo}"
		   artifactRepository="${p2.build.repo}"
		   buildResultFolder="${build.result.folder}"
		   unpack="false"
		   baseDirectory="${basedir}"
		/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27"/>
		<copy todir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}/@dot">
				<include name="**"/>
			</fileset>
		</copy>
		<copy todir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27" failonerror="true" overwrite="true">
			<fileset dir="${basedir}">
				<include name="META-INF/"/>
				<include name="OSGI-INF/"/>
			</fileset>
		</copy>
		<antcall target="apitools.generation">
			<param name="target.folder" value="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27"/>
			<param name="projectLocation" value="${basedir}"/>
			<param name="binary.folders" value="${build.result.folder}/@dot"/>
			<param name="projectName" value="${bundleId}_${bundleVersion}"/>
		</antcall>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27"/>
		<copy file="${build.result.folder}/src.zip" todir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27" failonerror="false" overwrite="false"/>
		<antcall target="copy.src.includes">
			<param name="source.destination.folder" value="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27"/>
		</antcall>
	</target>

	<target name="gather.individual.sources" depends="init">
		<antcall target="copy.src.zip">
			<param name="source.destination.folder" value="${destination.temp.folder}"/>
		</antcall>
		<antcall target="copy.src.includes">
			<param name="source.destination.folder" value="${destination.temp.folder}"/>
		</antcall>
	</target>

	<target name="copy.src.includes" depends="init">
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27"/>
		<copy todir="${destination.temp.folder}/jemma.osgi.ah.zigbee_2.1.27" failonerror="false" overwrite="false">
			<fileset dir="${build.result.folder}">
				<include name="@dot${logExtension}"/>
			</fileset>
		</copy>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: jemma.osgi.ah.zigbee of all the zips, jars and logs created.">
		<delete dir="${build.result.folder}/@dot"/>
		<delete file="${build.result.folder}/src.zip"/>
		<delete file="${plugin.destination}/jemma.osgi.ah.zigbee_2.1.27.jar"/>
		<delete file="${plugin.destination}/jemma.osgi.ah.zigbee_2.1.27.zip"/>
		<delete dir="${temp.folder}"/>
		<delete file="${compilation.problem.marker}" quiet="true"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="C:/Users/Pocos/Documents/backport/jemma.osgi.ah.zigbee" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: jemma.osgi.ah.zigbee.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}">
				<include name="**/*.bin${logExtension}"/>
			</fileset>
		</delete>
		<zip destfile="${plugin.destination}/jemma.osgi.ah.zigbee_2.1.27.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="apitools.generation" if="generateAPIDescription">
		<apitooling.apigeneration  projectName="${projectName}" project="${projectLocation}" binary="${binary.folders}" target="${target.folder}" extramanifests="${extraManifests}" allownonapiproject="${allowNonApiProject}"		/>
	</target>

</project>
